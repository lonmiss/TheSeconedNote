package ZhengW;

public class triangle {
	private line m;
	private line n;
	public void setM(line m) {
		this.m=m;
	}
	public line getM() {
		return m;
	}
	public void setN(line n) {
		this.n=n;
	}
	public line getN() {
		return n;
	}
	point a=m.getA();
	point b=m.getB();
	point c=n.getB();
	public triangle(point a,point b,point c) {
	    double mlength=Math.sqrt((a.getX()-b.getX())*(a.getX()-b.getX())+(a.getY()-b.getY())*(a.getY()-b.getY()));
	   	double nlength=Math.sqrt((a.getX()-c.getX())*(a.getX()-c.getX())+(a.getY()-c.getY())*(a.getY()-c.getY()));
	   	double lastlength=Math.sqrt((b.getX()-c.getX())*(b.getX()-c.getX())+(b.getY()-c.getY())*(b.getY()-c.getY()));
		if(mlength+nlength>lastlength&&mlength+lastlength>nlength&&lastlength+nlength>mlength) {
			this.a=a;
			this.b=b;
			this.c=c;
		}
		else {
			System.out.println("创建三角形错误");
		}
	}
	public double getC(point a,point b,point c) {
	    double mlength=Math.sqrt((a.getX()-b.getX())*(a.getX()-b.getX())+(a.getY()-b.getY())*(a.getY()-b.getY()));
	   	double nlength=Math.sqrt((a.getX()-c.getX())*(a.getX()-c.getX())+(a.getY()-c.getY())*(a.getY()-c.getY()));
	   	double lastlength=Math.sqrt((b.getX()-c.getX())*(b.getX()-c.getX())+(b.getY()-c.getY())*(b.getY()-c.getY()));
	   	if(mlength+nlength>lastlength&&mlength+lastlength>nlength&&lastlength+nlength>mlength) {
	   		return  mlength+nlength+lastlength;
	   	}
	   	else {
	   		return-1;
	   	}
	}
	public  triangle(line m,line n) {
	    double mlength=Math.sqrt((a.getX()-b.getX())*(a.getX()-b.getX())+(a.getY()-b.getY())*(a.getY()-b.getY()));
	   	double nlength=Math.sqrt((a.getX()-c.getX())*(a.getX()-c.getX())+(a.getY()-c.getY())*(a.getY()-c.getY()));
	   	double lastlength=Math.sqrt((b.getX()-c.getX())*(b.getX()-c.getX())+(b.getY()-c.getY())*(b.getY()-c.getY()));
	   	if(mlength+nlength>lastlength&&mlength+lastlength>nlength&&lastlength+nlength>mlength) {
	   		this.m=m;
	   		this.n=n;
	   	}
	   	else {
			System.out.println("创建三角形错误");
		}
}}
	